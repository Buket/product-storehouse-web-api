USE TestDb;
BEGIN TRANSACTION;
GO
CREATE OR ALTER TRIGGER [PRODUCTVERSION_INSERT] ON [STOREHOUSE].[PRODUCTVERSION]
   AFTER INSERT
AS 
BEGIN
	SET ANSI_NULLS ON;
	SET QUOTED_IDENTIFIER ON;
	IF (ROWCOUNT_BIG() = 0) RETURN;
	SET NOCOUNT ON;
	WITH 
	INSERTED_DATA AS
	(
		SELECT
			ID,
			PRODUCT_ID,
			NAME,
			DESCRIPTION,
			CREATINGDATE,
			WIDTH,
			HEIGHT,
			LENGTH
		FROM inserted
	),
	JSON_DATA([DATA]) AS
	(
		SELECT 
		(
		SELECT
			'INSERT' AS "ACTION",
			'PRODUCTVERSION' AS "TABLE",
			(SELECT * FROM INSERTED_DATA FOR JSON PATH) AS "DATA"
		FOR JSON PATH
		) AS [DATA]
	)
	INSERT INTO [STOREHOUSE].[EVENTLOG]
	SELECT
		NEWID(),
		sysdatetimeoffset() as EVENTDATE,
		(SELECT JSON_DATA.[DATA] FROM JSON_DATA) AS DESCRIPTION;
END
GO
CREATE OR ALTER TRIGGER [PRODUCTVERSION_DELETE] ON [STOREHOUSE].[PRODUCTVERSION]
   AFTER DELETE
AS 
BEGIN
	SET ANSI_NULLS ON;
	SET QUOTED_IDENTIFIER ON;
	IF (ROWCOUNT_BIG() = 0) RETURN;
	SET NOCOUNT ON;
	WITH 
	DELETE_DATA AS
	(
		SELECT
			ID,
			PRODUCT_ID,
			NAME,
			DESCRIPTION,
			CREATINGDATE,
			WIDTH,
			HEIGHT,
			LENGTH
		FROM deleted
	),
	JSON_DATA([DATA]) AS
	(
		SELECT
		(SELECT
			'DELETE' AS "ACTION",
			'PRODUCTVERSION' AS "TABLE",
			(SELECT * FROM DELETE_DATA FOR JSON PATH) AS "DATA"
		FOR JSON PATH) AS [DATA]
	)
	INSERT INTO [STOREHOUSE].[EVENTLOG]
	SELECT
		NEWID(),
		sysdatetimeoffset() as EVENTDATE,
		(SELECT JSON_DATA.[DATA] FROM JSON_DATA) AS DESCRIPTION;
END
GO
CREATE OR ALTER TRIGGER [PRODUCTVERSION_UPDATE] ON [STOREHOUSE].[PRODUCTVERSION]
   AFTER UPDATE
AS 
BEGIN
	SET ANSI_NULLS ON;
	SET QUOTED_IDENTIFIER ON;
	IF (ROWCOUNT_BIG() = 0) RETURN;
	SET NOCOUNT ON;
	WITH 
	UPDATE_DATA AS
	(
		SELECT
			ID,
			PRODUCT_ID,
			NAME,
			DESCRIPTION,
			CREATINGDATE,
			WIDTH,
			HEIGHT,
			LENGTH
		FROM inserted
	),
	JSON_DATA([DATA]) AS
	(
		SELECT(
		SELECT
			'UPDATE' AS "ACTION",
			'PRODUCTVERSION' AS "TABLE",
			(SELECT * FROM UPDATE_DATA FOR JSON PATH) AS "DATA"
		FOR JSON PATH) AS [DATA]
	)
	INSERT INTO [STOREHOUSE].[EVENTLOG]
	SELECT
		NEWID(),
		sysdatetimeoffset() as EVENTDATE,
		(SELECT JSON_DATA.[DATA] FROM JSON_DATA) AS DESCRIPTION;
END
GO
ENABLE TRIGGER ALL ON [STOREHOUSE].[PRODUCTVERSION];
COMMIT TRANSACTION;
