USE TestDb;
GO
CREATE OR ALTER FUNCTION [STOREHOUSE].FIND_PRODUCT
(
	@product_name VARCHAR(255),-- search by substring at PRODUCT.NAME
	@productversion_name VARCHAR(255),-- search by substring at  PRODUCTVERSION.NAME
	@minimal_volume REAL,
	@maximal_volume REAL
)
RETURNS @productinfo TABLE
(
	[PRODUCTVERSION_ID]		UNIQUEIDENTIFIER NOT NULL,
	[PRODUCT_NAME]			VARCHAR(255) NOT NULL,
	[PRODUCTVERSION_NAME]	VARCHAR(255) NOT NULL,
	[WIDTH]				REAL NOT NULL,
	[HEIGHT]			REAL NOT NULL,
	[LENGTH]			REAL NOT NULL
)
AS
BEGIN
-- search by substring  @product_name at PRODUCT.NAME
-- after inside results on referenced PRODUCTVERSION search by @productversion_name substring PRODUCTVERSION.NAME
-- after all, build CTE with new column [VOLUME] and make new search using criteria @minimal_volume <= @volume < @maximal_volume
SET ANSI_NULLS ON;
SET QUOTED_IDENTIFIER ON;

WITH SIMILIAR_NAME_PRODUCT (ID, NAME) AS
	(
		SELECT ID, NAME
		FROM STOREHOUSE.PRODUCT
	),
	REFERENCED_PRODUCTVERSION (PRODUCTVERSION_ID, PRODUCT_NAME, PRODUCTVERSION_NAME, WIDTH, HEIGHT, LENGTH, VOLUME) AS
	(
		SELECT
			PV.ID AS PRODUCTVERSION_ID,
			PRODUCT.NAME AS PRODUCT_NAME,
			PV.NAME AS PRODUCTVERSION_NAME,
			PV.WIDTH AS WIDTH,
			PV.HEIGHT AS HEIGHT,
			PV.LENGTH AS LENGTH,
			(PV.WIDTH * PV.HEIGHT * PV.LENGTH) AS VOLUME
		FROM SIMILIAR_NAME_PRODUCT PRODUCT
		INNER JOIN [STOREHOUSE].[PRODUCTVERSION] PV
		ON PRODUCT.ID = PV.PRODUCT_ID
	)
	INSERT INTO @productinfo
	SELECT
		PRODUCTVERSION_ID, PRODUCT_NAME, PRODUCTVERSION_NAME, WIDTH, HEIGHT, LENGTH
	FROM REFERENCED_PRODUCTVERSION
	WHERE
		PRODUCT_NAME LIKE '%'+@product_name+'%'
		AND
		PRODUCTVERSION_NAME LIKE '%' + @productversion_name + '%'
		AND
	@minimal_volume <= REFERENCED_PRODUCTVERSION.VOLUME AND REFERENCED_PRODUCTVERSION.VOLUME < @maximal_volume;
RETURN
END;